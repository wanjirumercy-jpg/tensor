# -*- coding: utf-8 -*-
"""Neural Network for Image Classification

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14iiZaQg18Z9DHiu7kcLTFqQ7dM1uQB9y

Import the necessary libraries
"""

import tensorflow as tf
from tensorflow.keras import layers, models
import matplotlib.pyplot as plt
from tensorflow.keras.datasets import cifar10

"""Load the Dataset"""

(train_images, train_labels), (test_images, test_labels) = cifar10.load_data()

#Normalize the images
train_images, test_images = train_images / 255.0, test_images / 255.0

"""Define the neural networl model"""

model = models.Sequential([
    layers.Conv2D(32, (3, 3), activation='relu', input_shape=(32, 32, 3)),
    layers.MaxPooling2D((2, 2)),
    layers.Conv2D(64, (3, 3), activation='relu'),
    layers.MaxPooling2D((2, 2)),
    layers.Conv2D(64, (3, 3), activation='relu'),
    layers.Flatten(),
    layers.Dense(64, activation='relu'),
    layers.Dense(10)
])

"""Compile the Model"""

model.compile(optimizer='adam',
              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
              metrics=['accuracy'])

"""Train the Model"""

history = model.fit(train_images, train_labels, epochs=10,
                    validation_data=(test_images, test_labels))

"""Evaluate the Model on test data"""

test_loss, test_acc = model.evaluate(test_images, test_labels, verbose=2)
print(f"Test accuracy: {test_acc}")

"""Plot the training history"""

plt.plot(history.history['accuracy'], label='accuracy')
plt.plot(history.history['val_accuracy'], label='val_accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.ylim([0, 1])
plt.legend(loc='lower right')
plt.show()